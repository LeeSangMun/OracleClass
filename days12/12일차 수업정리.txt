[데이터베이스(DB) 모델링]
1단계 : 요구 사항 분석      -> 요구 사항 명세서

2단계 : 개념적 모델링(설계)  -> E-R 다이어그램
    1) 데이터 요소(ENTITY == 개체) 추출
            ㄴ 개체의 속성 추출 -> 키 속성 추출
    2) 개체 간의 관계 파악

    ㄱ. 실체 = 개체 = Entity
        - 업무 수행을 위해 데이터로 관리되어지는 사람, 사물, 장소, 사건 등
        - 구축하고자 하는 업무의 목적, 범위, 전략에 따라 데이터로 관리되어지는 항목을 파악
            예) 회원제 - 회원(E) : 주소, 직업, 연봉 ..
        - 실체는 학생, 회원, 교수 등과 물리적으로 존재하는 유형
        - 학과, 과목, 시간 등의 개념적으로 존재하는 무형
        - 실체를 파악하는 요령 : 가장 중요한 것이 관련 업무의 지식
        
    ㄴ. 속성 추출
        - 속성 ? 실체의 저장할 필요가 있는 정보
        - 속성은 실체 성질, 분류, 수량, 상태, 특징등의 실체의 세부 항목
        - 속성의 관리 목적과 활용 방향에 따라.
        - 속성은 10개 내외 적당 // 중요하지는 않다.
        - 속성은 컬럼으로 정의.
            예) 회원 실체
                    ㄴ 속성 : 회원ID, 회원명, 주소, 연락처 등등
                부서 실체
                    ㄴ 부서번호, 부서명, 지역명 등등
        - 속성의 유형
            1) 기초속성 : 원래 갖고 있는 속성
                예) 학생(E) : 학번, 이름 등등
            2) 추출속성 : 기초 속성으로부터 가공처리해서 얻을 수 있는 속성
                예) 회원(E) : 나이속성 x , 주민등록번호 -> 생년월일, 나이 성별 등등
            3) 설계속성 : 실제로 존재하지는 않으나 시스템의 효율성을 위해서 설계자가 임의로 부여하는 속성
                예) 주문(E) : 주문번호, 고객, 상품, 일자, 수량, 금액
                    + 주문상태
                    
        - 속성 도메인 설정.
            ㄴ 속성이 가질 수 있는 값들의 범위, 제약조건, 특성 등 전체적으로 정의해 주는 것을
               '속성의 도메인 설정'이라고 한다.
        - 도메인 설정은 추후 개발 및 실체를 데이터베이스로 생성할 때 유용하게 사용된다.
        - 도메인 정의 시에는 (속성의 이름, 자료형, 크기, 형식, 허용되는 값의 제약조건, 유일성, 유효값, 초기값) 등의 사항을 파악
        - 도메인 무결성.
        
    3) 식별자(Identifier)
        - 식별자 ? 한 실체 내에서 각각의 인스턴스를 구분할 수 있는 단일 속성, 속성그룹
        - 식별자가 없으면 수정, 삭제할 때 문제가 있을 수 있다.
        - 식별자의 종류
            ㄱ. 후보키 (candidate key) : 실체를 구분할 수 있는 속성
                예) 사원 - 사원번호, 주민번호, 이메일, 휴대폰번호 등등
            ㄴ. 기본키 (primary key) : 후보키 중에 가장 적합한 키
                - 업무적 활용은 높고 크기(성능)는 작은게 좋다.
            ㄷ. 대체키 (alternate key)= 후보키 - 기본키
                - index로 활용할 수 있다.
            ㄹ. 복합키 (composite key) : 하나의 속성으로 기본키가 될 수 없는 경우, 둘 이상의 속성을 묶어서 식별자(PK)로 정의한 경우
                - 복합키 구성시 고려 사항
                    ㄴ 어떤 컬럼을 먼저 둘것인가 고려 // 복합키 중에 먼저 오는 컬럼에 index, unique 가 적용되기 때문
                    예) 사원 + 날짜 '급여 지급 내역'
                        [급여지급일자 + 사원번호] 지급일자 급여액
            ㅁ. 대리키 (surrogate key) : 식별자가 너무 길거나 여러 개의 복합키로 구성된 경우 인위적으로 역정규화해서 속성(식별자)을 추가
                예) [급여지급일자 + 사원번호](PK) 지급일자 급여액
                    -> 일련번호(PK) 급여지급일자 사원번호 지급일자 급여액
                    
    4) 관계(Relational)
        - 관계 ? 실체와 실체 간의 업무의 연관성
            예) [학생]  수강관계  [강의]
        - 실체(직사각형), 속성(타원), 실체(밑줄), 관계(마름모)\
        - 관계가 있는 두실체는 실선으로 연결하여 관계를 부여한다.
        
3단계 : 논리적 모델링       -> 릴레이션 스키마    // 정규화
    - ER-Diagram 작성
    -> 5가지 규칙(매핑룰 Mapping Rule) : 개념적 모델링에서 도출된 개체 타입과 관계타입의 테이블 정의
    -> 릴레이션스키마 변환
    -> 이상현상 문제가 발생
    -> 정규화 작업
    
    용어 정리)
        1) 부모테이블, 자식테이블
            예) 고객테이블(부모) - <주문> - 상품테이블(자식)
            예) 사원테이블(자식) - <소속> - 부서테이블(부모)
        2) 기본키(PK) 외래키(FK) 참조키
        3) 식별관계 - 부모(PK) -> 자식(FK, PK) //동시에 FK, PK 
           비식별관계 - 부모(PK) -> 자식(FK) // FK는 일반컬럼
           
    릴레이션 스키마 변환 규칙)
        규칙1 : 모든 개체는 릴레이션으로 변환한다.
        규칙2: 다대다(n:m) 관계는 릴레이션으로 변환한다
        규칙3: 일대다(1:n) 관계는 외래키로 표현한다
        규칙4: 일대일(1:1) 관계를 외래키로 표현한다
        규칙5: 다중 값 속성은 릴레이션으로 변환한다
     
     정규화)
        함수적 종속
            ㄴ 완전 함수적 종속
            ㄴ 부분 함수적 종속
            ㄴ 이행 함수적 종속
            
        여러 개의 속성이 모여서 하나의 기본키를 이룰 때 (복합키)
                            
        복합키 전체에 어떤 속성이 종속적일 때 "완전 함수적 종속"이라고 한다.
            
        완전 함수적 종속이 아니면 "부분 함수적 종속"이라고 한다.
        
        -- 이행 함수적 종속
        empno(PK)   ename
        결정자       종속자
        x      ->   Y
        Y는 X의 함수적 종속이다.
        
        x -> Y, Y -> Z 일때 x -> z // 이행 함수적
        
        - 정규형(Normal Form : NF) : 릴레이션이 정규화된 정도
            제1정규형(1NF) : 릴레이션에 속한 모든 속성의 도메인이 원자 값(atomic value)으로만 구성되어 있으면 제1정규형에 속한다.
            제2정규형(2NF) : 릴레이션이 제1정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속되면 제2정규형에 속한다.
            제3정규형(3NF) : 릴레이션이 제2정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 이행적 함수 종속이 되지 않으면 제3정규형에 속한다.
            BCNF : 릴레이션의 함수 종속 관계에서 모든 결정자가 후보키이면 보이스/코드 정규형에 속한다.
            제4정규형(4NF)
            제5정규형(5NF)
        
        
4단계 : 물리적 모델링       -> 물리적 스키마
                            DBMS, 역정규화, 인덱스
                            
5단계 : 구현







